#!/usr/bin/env python
#
#

## bootstrap

import warnings
warnings.simplefilter("ignore")

import os, sys
sys.path.insert(0, os.getcwd())

from gozerlib.utils.generic import getversion
print getversion('CONSOLE')

## make config from opts

from gozerlib.utils.opts import makeopts, makeconfig
opts = makeopts()
cfg = makeconfig(opts)

## set loglevel

from gozerlib.utils.log import setloglevel
setloglevel(opts.loglevel)

# gozerlib imports

from gozerlib.utils.mainloop import mainloop
from gozerlib.plugins import Plugins
from gozerlib.console.bot import ConsoleBot
from gozerlib.console.event import ConsoleEvent
from gozerlib.plugins import Plugins
from gozerlib.config import Config
from gozerlib.datadir import makedirs, datadir
from gozerlib.users import Users
from gozerlib.boot import boot
from gozerlib.errors import NoOwnerSet
from gozerlib.threads import start_new_thread
from gozerlib.utils.opts import makeconfig, makeopts
from gozerlib.fleet import fleet

## basic imports

import getpass
import logging
import time

import code
import readline
import atexit
import os

## parse options

opts = makeopts()
cfg = makeconfig(opts)

## start the bot

makedirs()
boot()
plugs = Plugins()
plugs.loadall()
users = Users()
userid = getpass.getuser() + '@' + cfg.uuid
users.make_owner(userid)
cfg.owner = userid
cfg.type = "console"

try:
    bot = ConsoleBot(cfg, plugs=plugs, users=users)
except NoOwnerSet:
    print "the owner is not set in %s" % cfg.cfile
    os._exit(1)


if opts.command:
    result = bot.docmnd(cfg.owner, opts.channel or "console", opts.command + u' '+ u' '.join(opts.args))
    time.sleep(3)
    os._exit(0)
elif opts.forward:
    fleet.addbot(bot)
    print "starting forward bot (%s)" % str(cfg)
    forwardbot = fleet.makebot('sxmpp', 'forwardbot', cfg=cfg)
    forwardbot.start()

bot.start()
