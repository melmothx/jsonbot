#!/usr/bin/env python
#
#

## bootstrap

import warnings
warnings.simplefilter("ignore")

import os, sys
sys.path.insert(0, os.getcwd())

from gozerlib.version import getversion
print getversion('SOCKET IRC')

## gozerlib imports

from gozerlib.utils.exception import handle_exception
from gozerlib.socklib.partyline import partyline
from gozerlib.socklib.irc.bot import IRCBot
from gozerlib.boot import plugin_packages, boot
from gozerlib.utils.log import setloglevel
from gozerlib.config import Config
from gozerlib.errors import NoOwnerSet
from gozerlib.fleet import fleet
from gozerlib.utils.mainloop import mainloop
from gozerlib.utils.opts import makeconfig, makeopts
from gozerlib.threads import start_new_thread
from gozerlib.eventhandler import mainhandler
import gozerlib.users as users
import gozerlib

## basic imports

from simplejson import load
import logging
import time
import os

## options parser

opts = makeopts()
boot(opts.datadir)

cfg = makeconfig('irc', opts)
cfg.type = "irc"
if opts.nick: cfg.nick = opts.nick
cfg.save()

## runtime

setloglevel(cfg.loglevel)

## resume or start the bot

if opts.doresume and os.path.isfile(opts.doresume):
    logging.warn("irc - resuming from %s" % opts.doresume)
    if True:
        fleet.resume(opts.doresume)
        fleet.startok.wait()
    partyline.resume(opts.doresume)
    os.unlink(opts.doresume)
else:
    try:
        bot = IRCBot(cfg, nick=opts.nick)
        bot.nick = cfg.nick or 'jsonbot'
    except NoOwnerSet, ex:
        print "owner is not set in %s - use the -o option" % str(ex)
        os._exit(1)
    if opts.channel and not opts.channel in bot.state['joinedchannels']:
        bot.state['joinedchannels'].append(opts.channel)
        bot.state.save()
    if opts.all:
        print "available fleet bots: %s" % fleet.avail()
    fleet.addbot(bot)
    if opts.forward:
        print "starting forward bot (%s)" % str(cfg)
        forwardcfg = makeconfig('sxmpp', opts, 'forwardbot') # sxmpp for the forward bo
        forwardbot = fleet.makebot('sxmpp', 'forwardbot', cfg=forwardcfg)
        start_new_thread(forwardbot.start, ())
    start_new_thread(bot.start, ())


mainloop()
