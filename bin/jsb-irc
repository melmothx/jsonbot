#!/usr/bin/env python
#
#

## bootstrap

import warnings
warnings.simplefilter("ignore")

import os, sys
sys.path.insert(0, os.getcwd())

from gozerlib.utils.generic import getversion
print getversion('SOCKET IRC')

## gozerlib imports

from gozerlib.utils.exception import handle_exception
from gozerlib.socklib.partyline import partyline
from gozerlib.socklib.irc.bot import IRCBot
from gozerlib.datadir import makedirs
from gozerlib.boot import plugin_packages, boot
from gozerlib.utils.log import setloglevel
from gozerlib.config import Config
from gozerlib.config import cfg as mainconfig
from gozerlib.errors import NoOwnerSet
from gozerlib.fleet import fleet
from gozerlib.utils.mainloop import mainloop
from gozerlib.utils.opts import makeconfig, makeopts
from gozerlib.threads import start_new_thread
import gozerlib.users as users
import gozerlib

## basic imports

from simplejson import load
import logging
import time
import os

## options parser

opts = makeopts()
cfg = makeconfig('irc', opts)
cfg.name = opts.name or 'default-IRCBot'
cfg.type = "irc"
cfg.save()

## runtime

setloglevel(cfg.loglevel)

makedirs()
boot()

from gozerlib.plugins import plugs
plugs.loadall()

if opts.doresume and os.path.isfile(opts.doresume):
    logging.warn("irc - resuming from %s" % opts.doresume)
    if True:
        fleet.resume(opts.doresume)
        fleet.startok.wait()

    partyline.resume(opts.doresume)
    os.unlink(opts.doresume) # bye
    fleet.startall()

else:

    ## start bot
    try:
        bot = IRCBot(cfg)
        bot.nick = cfg.nick or 'jsonbot'
    except NoOwnerSet, ex:
        print "owner is not set in %s - use the -o option" % str(ex)
        os._exit(1)

    if opts.channel and not opts.channel in bot.state['joinedchannels']:
        bot.state['joinedchannels'].append(opts.channel)
        bot.state.save()

    if opts.fleet:
        fleet.addbot(bot)

    if opts.forward:
        fleet.addbot(bot)
        print "starting forward bot (%s)" % str(cfg)
        forwardcfg = makeconfig('sxmpp', opts, 'forwardbot') # sxmpp for the forward bo
        forwardbot = fleet.makebot('sxmpp', 'forwardbot', cfg=forwardcfg)
        start_new_thread(forwardbot.start, ())

    bot.start()

mainloop()
